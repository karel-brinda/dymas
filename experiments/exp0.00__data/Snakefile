import smbl

rule all:
	input:
		#"Human.chr21.fa",
		#"Human.chr21.fa.fai",
		#"Mouse.chr19.fa",
		#"Mouse.chr19.fa.fai",
		"Borrelia_garinii.fa",
		"Borrelia_garinii.fa.fai",
		"Mycobacterium_tuberculosis.fa",
		"Mycobacterium_tuberculosis.fa.fai",
		"Neisseria_meningitidis.fa",
		"Neisseria_meningitidis.fa.fai",
		"Solibacter_usitatus.fa",
		"Solibacter_usitatus.fa.fai",
		"4bonacci.fa",
		smbl.prog.SAMTOOLS,
		smbl.prog.BCFTOOLS,
		smbl.prog.DWGSIM,
		smbl.prog.MASON_VARIATOR,
		smbl.prog.GNUPLOT5,
		smbl.prog.BWA,
		smbl.prog.VCFUTILS,

	

rule borrelia:
	output: "Borrelia_garinii.fa"
	shell: """
		wget -O Borrelia_garinii.fa http://genome2d.molgenrug.nl/Bacteria/Borrelia_garinii_BgVir_uid162165/NC_017717.fna 
		"""


rule tuberculosis:
	output: "Mycobacterium_tuberculosis.fa"
	shell: """
		wget -O Mycobacterium_tuberculosis.fa http://genome2d.molgenrug.nl/Bacteria/Mycobacterium_tuberculosis_H37Rv_uid170532/NC_018143.fna 
		"""


rule meningitidis:
	output: "Neisseria_meningitidis.fa"
	shell: """
		wget -O Neisseria_meningitidis.fa http://genome2d.molgenrug.nl/Bacteria/Neisseria_meningitidis_G2136_uid162085/NC_017513.fna
		"""


rule solibacter:
	output: "Solibacter_usitatus.fa"
	shell: """
		wget -O Solibacter_usitatus.fa http://genome2d.molgenrug.nl/Bacteria/Candidatus_Solibacter_usitatus_Ellin6076_uid58139/NC_008536.fna
		"""


rule human:
	output: "Human.chr21.fa", temp("chr21.fa.gz")
	shell: """
		wget http://hgdownload.cse.ucsc.edu/goldenpath/hg19/chromosomes/chr21.fa.gz
		gzip -c -d chr21.fa.gz > Human.chr21.fa
		"""

#http://hgdownload.cse.ucsc.edu/goldenPath/mm10/chromosomes/chr1.fa.gz
rule mouse:
	output: "Mouse.chr19.fa", temp("chr19.fa.gz")
	shell: """
		wget http://hgdownload.cse.ucsc.edu/goldenPath/mm10/chromosomes/chr19.fa.gz
		gzip -c -d chr19.fa.gz > Mouse.chr19.fa
		"""

rule dbonacci:
	output: "4bonacci.fa"
	run:
		subst={
			"A":"AC",
			"C":"AG",
			"G":"AT",
			"T":"A",
		}

		word=["A"]
		while len(word)<2000:
			word="".join([subst[x] for x in word])

		with open("4bonacci.fa","w+") as f:
			f.write(">4bonacci\n")
			for x in re.findall('.{1,60}', word):
				f.write("{}\n".format(x))

include: smbl.include()

